image: docker:latest

variables:
  GCP_REGISTRY_IMAGE: "gcr.io/$GCP_PROJECT_ID/$CI_PROJECT_NAME"

stages:
  - test
  - build
  - package
  - deploy

npm-test:
  stage: test
  image: node:16
  script:
    - npm i
    - npm test

npm-build:
  stage: build
  image: node:16
  script:
    - npm -v
    - npm i
    - npm run build
  artifacts:
    paths:
    - public/*

docker-gitlab:
  stage: package
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN ${CI_REGISTRY}
  script:
    - docker build -t "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}" .
    - docker tag "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}" "${CI_REGISTRY_IMAGE}:latest"
    - docker push "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}"
    - docker push "${CI_REGISTRY_IMAGE}:latest"
  only:
    - master

docker-gcp:
  stage: package
  services:
    - docker:dind
  before_script:
    - echo $GCP_SERVICE_KEY | docker login -u _json_key --password-stdin https://gcr.io
  script:
    - docker build -t "${GCP_REGISTRY_IMAGE}:${CI_COMMIT_SHA}" .
    - docker tag "${GCP_REGISTRY_IMAGE}:${CI_COMMIT_SHA}" "${GCP_REGISTRY_IMAGE}:latest"
    - docker push "${GCP_REGISTRY_IMAGE}:${CI_COMMIT_SHA}"
    - docker push "${GCP_REGISTRY_IMAGE}:latest"
  only:
    - main

cloud-run:
  stage: deploy
  image: google/cloud-sdk:latest
  before_script:
    - echo $GCP_SERVICE_KEY > gcloud-service-key.json && gcloud auth activate-service-account --key-file gcloud-service-key.json
    - gcloud config set project $GCP_PROJECT_ID
  script:
    - >
        gcloud run deploy
        $CI_PROJECT_NAME
        --image "${GCP_REGISTRY_IMAGE}:${CI_COMMIT_SHA}"
        --region europe-north1
        --platform managed
        --port 80
        --set-env-vars=CONTENT_URI=$CONTENT_URI
        --allow-unauthenticated
  only:
    - main
